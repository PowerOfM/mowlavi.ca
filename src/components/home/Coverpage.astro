---
import LogoSpot from "../LogoSpot.astro";

export interface Props {
  class: string;
}

const props = Astro.props;
---

<LogoSpot />
<section class={"hero coverpage " + props.class}>
  <img class="selfie lax_preset_spin:693:360" src="/img/me.png" />

  <div class="top-line"></div>

  <div class="segment">Engineer</div>
  <div class="gutter">COMPUTER ENGINEERING // SYSTEM ARCHITECTURE</div>

  <div class="segment right">Designer</div>
  <div class="gutter">USER INTERFACES // USER EXPERIENCE // BRANDING</div>

  <div class="segment creator lax_preset_spin">Creator</div>
  <div class="gutter">ART // MUSIC // VIDEO</div>

  <div class="dots" role="presentation">
    <!-- <div></div>
    <div></div>
    <div></div>
    <div></div>
    <div></div>
    <div></div>
    <div></div> -->
  </div>

  <img class="selfie me2" src="/img/me2.png" />
</section>
<div id="coverpage-scrolltrigger"></div>

<style lang="scss">
  @import "../../styles/animations.sass";
  @import "../../styles/theme.sass";

  .hero.coverpage {
    $ease-in1: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    $ease-in2: cubic-bezier(0.66, 0.26, 0.32, 0.95);

    position: relative;
    background: linear-gradient(315deg, #a31e75 0%, #3b457b 55%, #2b936d 100%);
    color: $white;
    overflow: hidden;

    .top-line {
      width: 100%;
      height: 0;
      border-top: 1px solid $white;
    }

    .segment {
      height: 25vh; // 1/4
      line-height: 25vh;
      font-size: min(25vh, 23vw); // ~80% height
      font-weight: 500;
      padding: 0 1%;
      z-index: 1;
      animation: slidein-left 1.25s $ease-in1 0s both;
    }
    .segment.right {
      text-align: right;
      animation: slidein-right 1s $ease-in1 0.5s both;
    }
    .segment.creator {
      animation: slidein-left 2s $ease-in1 0.75s both;
      text-align: center;
      font-family: $family-serif;
      font-style: italic;
      background: linear-gradient(
        259.87deg,
        #57c4c4 14.48%,
        #a783f2 45.94%,
        #f28383 84.75%
      );
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      text-fill-color: transparent;
    }
    .gutter {
      animation: tracking-in-expand 2s $ease-in2 1s both;
      font-size: 0;
      height: 0;
      width: 100%;
      border-top: 1px solid $white;
    }
    .selfie {
      animation: slide-right 2s $ease-in2 1s both;
      border-radius: 8rem;
      position: absolute;
      width: min(68vh, 80vw);
      height: min(68vh, 80vw);
      bottom: 12.5vh;
      right: 0;
      &.me2 {
        z-index: 2;
      }
    }
    .dots {
      display: flex;
      height: 12.5vh;
      position: relative;
      div {
        position: absolute;
        top: 3.125vh;
        left: -6.25vh;
        width: 6.25vh;
        height: 6.25vh;
        border: 1px solid $white;
        border-radius: 100%;
        animation-name: slide;
        animation-iteration-count: infinite;
        animation-delay: 2s;
        @for $i from 1 through 7 {
          &:nth-child(#{$i}) {
            animation-duration: #{7 + $i}s;
          }
        }
      }
      @keyframes slide {
        0% {
          left: 3.125vh;
        }
        50% {
          left: calc(100vw - 9.375vh);
        }
        100% {
          left: 3.125vh;
        }
      }
    }

    padding-top: 12.5vh; // 1/8

    // Horizontal - Desktop
    @include desktop {
      .segment {
        height: calc(25vh - 22px);
        line-height: calc(25vh - 22px);
        font-size: min(21vh, 20vw); // ~80% height
        border-top: none;
        border-bottom: none;
        // border-left: 7px solid $white;
        padding-left: 3%;

        &.right,
        &.creator {
          padding-right: 30%;
        }
      }
      .gutter {
        display: block;
        height: 22px;
        width: 100%;
        padding: 0 5%;
        font-size: 14px;
        line-height: 22px;
        border-top: 1px solid $white;
        border-bottom: 1px solid $white;
        font-family: $family-code;
      }
      .selfie {
        width: 62.5vh;
        height: 62.5vh;
        bottom: 12.5vh;
        right: 8%;
      }
    }

    // Noise texture overlay
    &::before {
      animation: grain 10s steps(10) infinite;
      background-image: url("/img/noise-texture.png");
      content: "";
      height: 300%;
      left: -50%;
      opacity: 0.2;
      position: absolute;
      top: -100%;
      width: 300%;
    }
    @keyframes grain {
      0%,
      100% {
        transform: translate(0, 0);
      }
      10% {
        transform: translate(-5%, -10%);
      }
      20% {
        transform: translate(-15%, 5%);
      }
      30% {
        transform: translate(7%, -25%);
      }
      40% {
        transform: translate(-5%, 25%);
      }
      50% {
        transform: translate(-15%, 10%);
      }
      60% {
        transform: translate(15%, 0%);
      }
      70% {
        transform: translate(0%, 15%);
      }
      80% {
        transform: translate(3%, 35%);
      }
      90% {
        transform: translate(-10%, 10%);
      }
    }
  }
</style>
